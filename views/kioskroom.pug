doctype html
html(lang='en-US')
  head
    title MeetKettle
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='apple-touch-icon' sizes='180x180' href='/public/apple-touch-icon.png')
    link(rel='icon' type='image/png' sizes='32x32' href='/public/favicon-32x32.png')
    link(rel='icon' type='image/png' sizes='16x16' href='/public/favicon-16x16.png')
    link(rel='manifest' href='/public/site.webmanifest')
    link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/css/bootstrap.min.css')
    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css")
    link(rel="stylesheet", href="/public/css/styles.css")

  body.kiosk-body

  if !errors
        .row.g-0.full-height
          .col-md-3
            .row.h-100.g-0
              .bg-unavailable.m-0.full-height
          .col-md-9.full-height
            .row.g-0.mx-4.full-height
              h2.fw-normal.my-4 #{roomName.toUpperCase()}
                span#clock.float-end.fs-4 00:00:00
              .d-md-block
                button.btn.btn-primary BOOK NEW MEETING
                  i.fa.fa-plus.mx-2
              h1.kiosk-status.text-center.text-danger.pt-5 BUSY
              #until.text-center.text-dark.fw-bold.fs-4 UNTIL 11:00 AM
              //- #meetingCurrent.text-center.text-dark.fs-5 Special briefing with Government Officials | 10:30 AM - 11:00 AM | Online
              #meetingCurrent.text-center.text-dark.fs-5 #{description} | #{datetime} - 11:00 AM | #{service}
              #meetingNext
                span.bottom-align-text.text-primary.fs-5.fw-bold NEXT MEETING: 
                  span.fw-normal 12:00 PM ON 05th FEBRUARY 2024 | Meeting with President | Face-to-Face
  script.
    let roomList = JSON.parse('!{JSON.stringify(meetingList)}');
  //- script(src='/public/js/kioskroom.js')

  if errors
    ul.text-danger
      for error in errors
        li!= error.msg

  script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.1.2/dist/js/bootstrap.bundle.min.js')
  script.
    document.addEventListener("DOMContentLoaded", function() {
      var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
      });
      getWakeLock();
      startTime();
    });
    async function getWakeLock() {
      let wakeLock = null;
      try {
        //- wakeLock = await navigator.wakeLock.request('screen');
        console.log('Wake Lock is active!');
      } catch (err) {
        console.log(`${err.name}, ${err.message}`);
      }
    }
    function startTime() {
      const today = new Date();
      let h = today.getHours();
      let m = today.getMinutes();
      let s = today.getSeconds();
      m = checkTime(m);
      s = checkTime(s);
      document.getElementById('clock').innerHTML =  h + ":" + m + ":" + s;
      setTimeout(startTime, 1000);
    }
    function checkTime(i) {
      if (i < 10) {i = "0" + i};  // add zero in front of numbers < 10
      return i;
    }
